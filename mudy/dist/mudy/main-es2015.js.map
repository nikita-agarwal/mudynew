{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/customers/customer-edit.html","./src/app/customers/customers.component.html","./src/app/header/header.component.html","./src/app/inventory/inventory.component.html","./src/app/invoices/invoice-view.html","./src/app/invoices/invoices.component.html","./src/app/invoices/payment-reminder-view.html","./src/app/sales/payment-modal.html","./src/app/sales/sales.component.html","./src/app/sidebar/sidebar.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.less","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/customer.service.ts","./src/app/customers/customers.component.less","./src/app/customers/customers.component.ts","./src/app/header/header.component.less","./src/app/header/header.component.ts","./src/app/inventory.service.ts","./src/app/inventory/inventory.component.less","./src/app/inventory/inventory.component.ts","./src/app/invoices/invoices.component.less","./src/app/invoices/invoices.component.ts","./src/app/sales/sales.component.less","./src/app/sales/sales.component.ts","./src/app/sidebar/sidebar.component.less","./src/app/sidebar/sidebar.component.ts","./src/environments/environments.ts","./src/main.ts","fs (ignored)","crypto (ignored)","stream (ignored)"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<app-header></app-header>\\n<app-sidebar></app-sidebar>\\n<div class=\\\"content-wrapper\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\"","export default \"<div class=\\\"form\\\">\\r\\n    <div class=\\\"form-group col-sm-4\\\" *ngFor=\\\"let sub of submersibles\\\">\\r\\n        <label>{{sub.description}}</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Rate\\\"\\r\\n            [(ngModel)]=\\\"sub.rate\\\">\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"form-group col-sm-12\\\">\\r\\n        <button (click)=\\\"updateCustomer()\\\" class=\\\"btn btn-primary\\\">\\r\\n            Update</button>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"card\\\">\\n    <mat-tab-group (selectedTabChange)=\\\"getAllCustomers($event)\\\">\\n        <mat-tab label=\\\"Add Customer\\\">\\n            <div class=\\\"form\\\">\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputCustomerName\\\">Customer Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCustomerName\\\" placeholder=\\\"Enter Name\\\"\\n                        [(ngModel)]=\\\"customer.name\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputMobileNumber\\\">Mobile Number</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputMobileNumber\\\" placeholder=\\\"Enter Mobile Number\\\"\\n                        [(ngModel)]=\\\"customer.mobileNumber\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputPanNo\\\">PAN No</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPanNo\\\" placeholder=\\\"Enter PAN no.\\\"\\n                        [(ngModel)]=\\\"customer.pan\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputGstNo\\\">GST No</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGstNo\\\" placeholder=\\\"Enter GST no.\\\"\\n                        [(ngModel)]=\\\"customer.gst\\\">\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"inputCustomerAddress\\\">Customer Address</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"inputCustomerAddress\\\" placeholder=\\\"Enter Customer Address\\\"\\n                        [(ngModel)]=\\\"customer.address\\\"></textarea>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"inputShippingAddress\\\">Shipping Address</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"inputShippingAddress\\\" placeholder=\\\"Enter Customer Address\\\"\\n                        [(ngModel)]=\\\"customer.shippingAddress\\\"></textarea>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"inputState\\\">State</label>\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"customer.state\\\" (change)=\\\"setStateCode($event.target.value)\\\" placeholder=\\\"Choose State\\\">\\n                        <option selected>Open this select menu</option>\\n                        <option *ngFor=\\\"let st of states\\\" [value]=\\\"st.state\\\">\\n                            {{st.state}}\\n                        </option>\\n                    </select>\\n                </div>\\n                <div class=\\\"form-group col-sm-2\\\">\\n                    <label for=\\\"inputStateCode\\\">Code</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputStateCode\\\" placeholder=\\\"Enter State Code\\\"\\n                        [(ngModel)]=\\\"customer.stateCode\\\" disabled>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputBrand\\\">Brand</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputBrand\\\" placeholder=\\\"Enter Brand\\\"\\n                        [(ngModel)]=\\\"customer.brand\\\">\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    \\n                </div>\\n\\n                <div class=\\\"form-group col-sm-4\\\" *ngFor=\\\"let sub of submersibles\\\">\\n                    <label>{{sub.description}}</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Rate\\\"\\n                        [(ngModel)]=\\\"sub.rate\\\">\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <button (click)=\\\"addCustomer()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                            aria-hidden=\\\"true\\\"></i>\\n                        Add</button>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"View Customers\\\">\\n            <div class=\\\"card-container\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Mobile</th>\\n                            <th>Pan</th>\\n                            <th>Gst</th>\\n                            <th>Address</th>\\n                            <th>State</th>\\n                            <th>Brand</th>\\n                            <th>Rates</th>\\n                            <th>Action</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let customer of customers\\\">\\n                            <td>{{customer.name}}</td>\\n                            <td>{{customer.mobileNumber}}</td>\\n                            <td>{{customer.pan}}</td>\\n                            <td>{{customer.gst}}</td>\\n                            <td>{{customer.address}}</td>\\n                            <td>{{customer.state}}- {{customer.stateCode}}</td>\\n                            <td>{{customer.brand}}</td>\\n                            <td><div *ngFor=\\\"let rate of customer.subRates[customer.subRates.length-1]\\\">{{rate.name}}-{{rate.rate}}</div></td>\\n                            <td>\\n                                <button (click)=\\\"editCustomer(customer)\\\" class=\\\"btn btn-transparent\\\"><i class=\\\"fa fa-edit\\\"\\n                                    aria-hidden=\\\"true\\\"></i>\\n                                </button>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n\\n</div>\\n\"","export default \"<header>\\n    <img src=\\\"assets/logo.png\\\" alt=\\\"logo\\\" />\\n</header>\\n\"","export default \"<div class=\\\"card\\\">\\n    <mat-tab-group (selectedTabChange)=\\\"getAllParts($event)\\\">\\n        <mat-tab label=\\\"Add Inventory/Stocks\\\">\\n            <div class=\\\"form\\\">\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <button (click)=\\\"addStocks()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                            aria-hidden=\\\"true\\\"></i>\\n                        Add Stocks</button>\\n                </div>\\n\\n                <div *ngIf=\\\"stocks.length > 0\\\">\\n                    <div class=\\\"row m-10\\\" *ngFor=\\\"let stock of stocks; let i = index\\\">\\n                        <div class=\\\"form-group col-sm-6\\\">\\n                            <label for=\\\"inputPartType\\\">Choose Inventory</label>\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"stock.id\\\">\\n                                <option selected>Open this select menu</option>\\n                                <option *ngFor=\\\"let inventory of inventories\\\" [value]=\\\"inventory._id\\\">\\n                                    {{inventory.name}}- {{inventory.type}}\\n                                </option>\\n                            </select>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <label for=\\\"inputInventoryQuantity\\\">Quantity</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputInventoryQuantity\\\" placeholder=\\\"Quantity\\\"\\n                                [(ngModel)]=\\\"stock.quantity\\\">\\n                        </div>\\n\\n                        <button (click)=\\\"removeStocks(i)\\\" class=\\\"btn btn-link col-sm-1 mt-15\\\">\\n                            <i class=\\\"fa fa-close\\\" aria-hidden=\\\"true\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <button (click)=\\\"purchaseStocks()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                            aria-hidden=\\\"true\\\"></i>\\n                        Purchase</button>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Add Finish Goods in Stocks\\\">\\n            <div class=\\\"form\\\">\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <button (click)=\\\"addItems()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                            aria-hidden=\\\"true\\\"></i>\\n                        Add Items</button>\\n                </div>\\n\\n                <div *ngIf=\\\"items.length > 0\\\">\\n                    <div class=\\\"row m-10\\\" *ngFor=\\\"let item of items; let i = index\\\">\\n                        <div class=\\\"form-group col-sm-6\\\">\\n                            <label for=\\\"inputItemType\\\">Choose Items</label>\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"item.id\\\">\\n                                <option selected>Open this select menu</option>\\n                                <option *ngFor=\\\"let sub of submersibles\\\" [value]=\\\"sub._id\\\">\\n                                    {{sub.name}}\\n                                </option>\\n                            </select>\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <label for=\\\"inputItemQuantity\\\">Quantity</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputItemQuantity\\\" placeholder=\\\"Quantity\\\"\\n                                [(ngModel)]=\\\"item.quantity\\\">\\n                        </div>\\n\\n                        <button (click)=\\\"removeItems(i)\\\" class=\\\"btn btn-link col-sm-1 mt-15\\\">\\n                            <i class=\\\"fa fa-close\\\" aria-hidden=\\\"true\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <button (click)=\\\"addFinishGoods()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                            aria-hidden=\\\"true\\\"></i>\\n                        Add</button>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"Add Child Parts\\\">\\n            <div class=\\\"form\\\">\\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"inputPartType\\\">Stock Type</label>\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"part.type\\\" id=\\\"inputPartType\\\" placeholder=\\\"Enter Type\\\">\\n                        <option selected>Open this select menu</option>\\n                        <option value=\\\"motor\\\">Motor </option>\\n                        <option value=\\\"pump\\\">Pump </option>\\n                    </select>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"inputMoc\\\">MOC</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputMoc\\\" placeholder=\\\"MOC\\\" [(ngModel)]=\\\"part.moc\\\">\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"inputPartName\\\">Part Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPartName\\\" placeholder=\\\"Enter Name\\\"\\n                        [(ngModel)]=\\\"part.name\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"inputPartNo\\\">Part Number</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPartNo\\\" placeholder=\\\"Enter Part no.\\\"\\n                        [(ngModel)]=\\\"part.number\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"inputMaterial\\\">Material</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputMaterial\\\" placeholder=\\\"Enter Material\\\"\\n                        [(ngModel)]=\\\"part.material\\\">\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"inputDescription\\\">Description</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"inputDescription\\\" placeholder=\\\"Enter Description\\\"\\n                        [(ngModel)]=\\\"part.description\\\"></textarea>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <button (click)=\\\"createPart()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                            aria-hidden=\\\"true\\\"></i>\\n                        Create</button>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"View Inventory\\\">\\n            <div class=\\\"card-container\\\">\\n                <button class=\\\"btn btn-primary export-btn\\\" (click)=\\\"exportToExcel()\\\">Export To Excel</button>\\n                <table class=\\\"table\\\" id=\\\"inventory-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>S.no</th>\\n                            <th>Part Name</th>\\n                            <th>Part Number</th>\\n                            <th>Type</th>\\n                            <th>Material</th>\\n                            <th>Description</th>\\n                            <th>MOC</th>\\n                            <th class=\\\"bg-blue\\\">C/L 100</th>\\n                            <th class=\\\"bg-pink\\\">C/L 150</th>\\n                            <th class=\\\"bg-purple\\\">C/L 180</th>\\n                            <th class=\\\"bg-yellow\\\">C/L 225</th>\\n                            <th class=\\\"bg-green\\\">C/L 240</th>\\n                            <th>Remaining</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let item of inventories; let i = index;\\\">\\n                            <td>{{i + 1}}</td>\\n                            <td>{{item.name}}</td>\\n                            <td>{{item.number}}</td>\\n                            <td>{{item.type}}</td>\\n                            <td>{{item.material}}</td>\\n                            <td>{{item.description}}</td>\\n                            <td>{{item.moc}}</td>\\n\\n                            <td class=\\\"bg-blue\\\">\\n                                <span\\n                                    *ngIf=\\\"item.allowedSubType.indexOf(submersibles[0]._id) !== -1 || item.allowedSubType.indexOf(submersibles[1]._id) !== -1\\\">{{(submersibles[0].quantity\\n                                    || submersibles[1].quantity )?\\n                                    (submersibles[0].quantity + submersibles[1].quantity):0}}</span>\\n                            </td>\\n                            <td class=\\\"bg-pink\\\">\\n                                <span\\n                                    *ngIf=\\\"item.allowedSubType.indexOf(submersibles[2]._id) !== -1\\\">{{submersibles[2].quantity?\\n                                    submersibles[2].quantity: 0}}</span>\\n                            </td>\\n                            <td class=\\\"bg-purple\\\">\\n                                <span\\n                                    *ngIf=\\\"item.allowedSubType.indexOf(submersibles[3]._id) !== -1 || item.allowedSubType.indexOf(submersibles[4]._id) !== -1\\\">{{(submersibles[3].quantity\\n                                    || submersibles[4].quantity )?\\n                                    (submersibles[3].quantity + submersibles[4].quantity):0}}</span>\\n                            </td>\\n                            <td class=\\\"bg-yellow\\\">\\n                                <span *ngIf=\\\"item.allowedSubType.indexOf(submersibles[5]._id) !== -1\\\">\\n                                    {{submersibles[5].quantity? submersibles[5].quantity: 0}}</span>\\n                            </td>\\n                            <td class=\\\"bg-green\\\"><span\\n                                    *ngIf=\\\"item.allowedSubType.indexOf(submersibles[6]._id) !== -1\\\">{{submersibles[6].quantity?\\n                                    submersibles[6].quantity: 0}}</span></td>\\n\\n                            <td>{{item.quantity}}</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"View Finish Goods in Stocks\\\">\\n            <div class=\\\"card-container\\\">\\n                <table class=\\\"table\\\" id=\\\"finish-goods-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>S.no</th>\\n                            <th>Submersibles</th>\\n                            <th>Quantity</th>\\n                            <th>Description</th>\\n                            <th>HsnSac</th>\\n              \\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let item of submersibles; let i = index;\\\">\\n                            <td>{{i + 1}}</td>\\n                            <td>{{item.name}}</td>\\n                            <td>{{item.quantity}}</td>\\n                            <td>{{item.description}}</td>\\n                            <td>{{item.hsnSac}}</td>\\n\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\\n\"","export default \"<div class=\\\"invoice-wrapper\\\" id=\\\"demo\\\">\\r\\n  <button class=\\\"btn btn-primary print-btn\\\" ngxPrint [useExistingCss]=\\\"true\\\" printSectionId=\\\"demo\\\">Print</button>\\r\\n  <h4 class=\\\"text-center\\\">Tax Invoice</h4>\\r\\n  <div class=\\\"flex-row\\\">\\r\\n    <div class=\\\"flex-left-column\\\">\\r\\n      <div class=\\\"fs-14\\\"><b>GST NO:</b> 08AOKPT4668R1ZO</div>\\r\\n      <div class=\\\"fs-14\\\"><b>PAN NO:</b> AOKPT4668R</div>\\r\\n    </div>\\r\\n    <small class=\\\"flex-center-column\\\">\\r\\n      ( For supply from factory/warehouse on payment of GST under Rule-7, Section-31 )\\r\\n    </small>\\r\\n    <small class=\\\"flex-right-column text-underline\\\">\\r\\n      Original for Recipient\\r\\n    </small>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"flex-row mb-20\\\">\\r\\n    <div class=\\\"flex-left-column\\\">\\r\\n      <img src=\\\"assets/logo.png\\\" alt=\\\"logo\\\" class=\\\"h-8vh\\\" />\\r\\n    </div>\\r\\n\\r\\n    <h2 class=\\\"flex-right-column w-70\\\">\\r\\n      Mudy Manufacturing Industries\\r\\n    </h2>\\r\\n  </div>\\r\\n  <div class=\\\"flex-row\\\">\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      Manufacturer of: All kind of Submersible pump, Indusction motor and control panel\\r\\n      H1-488, RIICO Industrial area, Khushkhera, Alwar, Rajasthan, 301707\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <div><b>State :</b> Rajasthan</div>\\r\\n      <div><b>Code :</b> 08</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"flex-row mb-20\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <b>Customer Name:</b>\\r\\n      <div>{{customer.name}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <div><b>Invoice No :</b> </div>\\r\\n      <div><b>Challan No :</b> </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n      <div><b>Date :</b> {{invoice.date | date: 'dd-MMM-yyyy'}}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"flex-row align-up mb-20\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div><b>Customer Address :</b> {{customer.address}}</div>\\r\\n      <br />\\r\\n      <div><b>GST :</b> {{customer.gst}}</div>\\r\\n      <div><b>PAN :</b> {{customer.pan}}</div>\\r\\n      <div><b>State :</b> {{customer.state}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div><b>Shipping Address :</b> {{customer.shippingAddress}}</div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"flex-row\\\">\\r\\n    <table class=\\\"table\\\">\\r\\n      <thead>\\r\\n        <th>S.No</th>\\r\\n        <th>Description Of Goods</th>\\r\\n        <th>HSN / SAC</th>\\r\\n        <th>Qty</th>\\r\\n        <th>Unit Price</th>\\r\\n        <th *ngIf=\\\"customer.state === 'Rajasthan'\\\">GST @ 12%</th>\\r\\n        <th *ngIf=\\\"customer.state !== 'Rajasthan'\\\">CGST @ 6%</th>\\r\\n        <th *ngIf=\\\"customer.state !== 'Rajasthan'\\\">SGST @ 6%</th>\\r\\n        <th>Total Amount</th>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr *ngFor=\\\"let good of invoice.goods; let i = index\\\">\\r\\n          <td>{{i + 1}}</td>\\r\\n          <td>{{good.description}}-4{{customer.brand}}{{good.code}}S4</td>\\r\\n          <td>{{good.hsnSac}}</td>\\r\\n          <td>{{good.qty}}</td>\\r\\n          <td>{{good.price}}</td>\\r\\n          <td *ngIf=\\\"customer.state === 'Rajasthan'\\\">{{(good.price*12)/100}}</td>\\r\\n          <td *ngIf=\\\"customer.state !== 'Rajasthan'\\\">{{(good.price*6)/100}}</td>\\r\\n          <td *ngIf=\\\"customer.state !== 'Rajasthan'\\\">{{(good.price*6)/100}}</td>\\r\\n          <td>{{good.qty * good.price}}</td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"text-right\\\">\\r\\n    <b>Total Amount:</b> {{totalAmt}}\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <b>Declaration:</b>\\r\\n        <span>Certified that Perticulars given above are true and correct under GST Act 2017 and amount indicated\\r\\n          represent the price actualy charged and that there is no flow of additional consideration directly or\\r\\n          indirectly from buyer .\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <b>Terms & Conditions :</b>\\r\\n        <ol type=\\\"1\\\">\\r\\n          <li>Interest @ 12 % P.A will be charged extra on all the bills outstnading if payment made after due date.</li>\\r\\n          <li>Goods once sold will not be accepted back.</li>\\r\\n          <li>Our Responsibility ceases as the goods leave our premises</li>\\t\\t                 \\r\\n        </ol>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <b>Cheque or RTGS / NEFT should be in Favour of :</b>\\r\\n        <ol type=\\\"1\\\">\\r\\n          <li>MUDY MANUFACTURING INDUSTRIES.</li>\\r\\n          <li>BANK A/C NO : \\\" 349405000431 \\\"</li>\\r\\n          <li>BANK NAME : ' ICICI BANK\\\"</li>\\t\\t \\r\\n          <li>IFSC CODE : \\\" ICIC0003494 \\\"</li>     \\r\\n          <li>BRANCH : \\\" BHIWADI ALWAR BYPASS\\\"</li>           \\r\\n        </ol>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-2\\\"></div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n      <div class=\\\"row mb-20 space-between\\\">\\r\\n        <b>Taxable Amount roundoff :</b>\\r\\n        <span> {{totalAmt}}\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"row mb-20 space-between\\\">\\r\\n        <b>CGST@ 6% :</b>\\r\\n        <span *ngIf=\\\"customer.state === 'Rajasthan'\\\">\\r\\n          {{(totalAmt*6)/100}}\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"row mb-20 space-between\\\">\\r\\n        <b>SGST@ 6% :</b>\\r\\n        <span *ngIf=\\\"customer.state === 'Rajasthan'\\\"> \\r\\n          {{(totalAmt*6)/100}}\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"row mb-20 space-between\\\">\\r\\n        <b>IGST@ 12% :</b>\\r\\n        <span *ngIf=\\\"customer.state !== 'Rajasthan'\\\"> \\r\\n          {{(totalAmt*12)/100}}\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"row mb-20 space-between\\\">\\r\\n        <b>Grand Total :</b>\\r\\n        <span *ngIf=\\\"customer.state !== 'Rajasthan'\\\"> \\r\\n          {{totalAmt + ((totalAmt*12)/100)}}\\r\\n        </span>\\r\\n        <span *ngIf=\\\"customer.state === 'Rajasthan'\\\"> \\r\\n          {{totalAmt + ((totalAmt*6)/100) + ((totalAmt*6)/100)}}\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"row mb-20 space-between\\\">\\r\\n        <b>Grand Total Roundoff :</b>\\r\\n        <span *ngIf=\\\"customer.state !== 'Rajasthan'\\\"> \\r\\n          {{totalAmt + ((totalAmt*12)/100)}}\\r\\n        </span>\\r\\n        <span *ngIf=\\\"customer.state === 'Rajasthan'\\\"> \\r\\n          {{totalAmt + ((totalAmt*6)/100) + ((totalAmt*6)/100) |  number:'1.0-0'}}\\r\\n        </span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <hr>\\r\\n  <div class=\\\"flex-row\\\">\\r\\n    All Disputes Subjected to Bhiwadi Rajasthan Jurisdition only.\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<div class=\\\"card\\\">\\n    <mat-tab-group (selectedTabChange)=\\\"getAllInvoices($event)\\\">\\n        <mat-tab label=\\\"Create Invoice\\\">\\n            <a href=\\\"/customers\\\" class=\\\"link\\\">+ Add New Customer</a>\\n            <div class=\\\"form\\\">\\n                <div class=\\\"form-group col-sm-9\\\">\\n                    <label for=\\\"inputCustomerName\\\">Choose Existing Customer</label>\\n                    <select class=\\\"form-control\\\" (change)=\\\"fillDetails(customer._id)\\\" [(ngModel)]=\\\"customer._id\\\">\\n                        <option selected>Open this select menu</option>\\n                        <option *ngFor=\\\"let customer of customers\\\" [value]=\\\"customer._id\\\">\\n                            {{customer.name}}\\n                        </option>\\n                    </select>\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputDate\\\">Date</label>\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"inputDate\\\" placeholder=\\\"Enter Date\\\"\\n                        [(ngModel)]=\\\"date\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"inputCustomerName\\\">Customer Name</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputCustomerName\\\" placeholder=\\\"Enter Name\\\"\\n                        [(ngModel)]=\\\"customer.name\\\" disabled>\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"inputPanNo\\\">PAN No</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputPanNo\\\" placeholder=\\\"Enter PAN no.\\\"\\n                        [(ngModel)]=\\\"customer.pan\\\" disabled>\\n                </div>\\n                <div class=\\\"form-group col-sm-4\\\">\\n                    <label for=\\\"inputGstNo\\\">GST No</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGstNo\\\" placeholder=\\\"Enter GST no.\\\"\\n                        [(ngModel)]=\\\"customer.gst\\\" disabled>\\n                </div>\\n        \\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"inputCustomerAddress\\\">Customer Address</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"inputCustomerAddress\\\" placeholder=\\\"Enter Customer Address\\\"\\n                        [(ngModel)]=\\\"customer.address\\\" disabled></textarea>\\n                </div>\\n        \\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"inputShippingAddress\\\">Shipping Address</label>\\n                    <textarea class=\\\"form-control\\\" id=\\\"inputShippingAddress\\\" placeholder=\\\"Enter Customer Address\\\"\\n                        [(ngModel)]=\\\"customer.shippingAddress\\\"></textarea>\\n                </div>\\n        \\n                <div class=\\\"form-group col-sm-6\\\">\\n                    <label for=\\\"inputState\\\">State</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputState\\\" placeholder=\\\"Enter State\\\"\\n                        [(ngModel)]=\\\"customer.state\\\" disabled>\\n                </div>\\n        \\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <button (click)=\\\"addGoods()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-circle\\\" aria-hidden=\\\"true\\\"></i>\\n                        Add Goods</button>\\n                </div>\\n        \\n                <div *ngIf=\\\"goods.length > 0\\\">\\n                    <div class=\\\"row m-10\\\" *ngFor=\\\"let good of goods; let i = index\\\">\\n                        <div class=\\\"form-group col-sm-3\\\">\\n                            <label>Description</label>\\n                            <select class=\\\"form-control\\\" [(ngModel)]=\\\"good.description\\\" (change)=\\\"fillGoodsDetails(good.description, good)\\\">\\n                                <option selected>Open this select menu</option>\\n                                <option *ngFor=\\\"let sub of submersibles\\\" [value]=\\\"sub._id\\\">\\n                                    {{sub.description}}\\n                                </option>\\n                            </select>\\n                        </div>\\n        \\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <label>HSN/SAC</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"HSN/SAC\\\" [(ngModel)]=\\\"good.hsnSac\\\" disabled>\\n                        </div>\\n                        \\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <label>Serial Number</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Serial Number\\\" [(ngModel)]=\\\"good.serialNumber\\\">\\n                        </div>\\n\\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <label>Qty</label>\\n                            <input type=\\\"number\\\" class=\\\"form-control\\\" placeholder=\\\"Qty\\\" [(ngModel)]=\\\"good.qty\\\">\\n                        </div>\\n        \\n                        <div class=\\\"form-group col-sm-2\\\">\\n                            <label>Unit Price</label>\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Unit Price\\\" [(ngModel)]=\\\"good.price\\\" disabled>\\n                        </div>\\n        \\n                        <button (click)=\\\"removeGoods(i)\\\" class=\\\"btn btn-link col-sm-1 mb-15\\\">\\n                            <i class=\\\"fa fa-close\\\" aria-hidden=\\\"true\\\"></i>\\n                        </button>\\n                    </div>\\n                </div>\\n        \\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <button (click)=\\\"createInvoice()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                            aria-hidden=\\\"true\\\"></i>\\n                        Create</button>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"View Invoice\\\">\\n            <div class=\\\"card-container\\\">\\n                <table class=\\\"table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Name</th>\\n                            <th>Date</th>\\n                            <th>Actions</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let invoice of invoices\\\">\\n                            <td>{{invoice.name}}</td>\\n                            <td>{{invoice.date}}</td>\\n                            <td>\\n                                <button class=\\\"btn btn-transparent p-0\\\" (click)=\\\"viewInvoice(invoice._id)\\\">\\n                                    <i class=\\\"fa fa-eye\\\"></i>\\n                                </button>\\n                                <!-- <button class=\\\"btn btn-transparent danger p-0\\\" (click)=\\\"deleteInvoice(invoice._id)\\\">\\n                                    <i class=\\\"fa fa-trash\\\"></i>\\n                                </button> -->\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n\\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\\n\"","export default \"<table class=\\\"table\\\" id=\\\"sales-table\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th>Total Due</th>\\r\\n            <th>Total Recieved</th>\\r\\n            <th>Balance</th>\\r\\n            <th>Sales</th>\\r\\n            <th>Payment</th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <tr>\\r\\n            <td>{{data.totalBalance}}</td>\\r\\n            <td>{{data.totalRecieved}}</td>\\r\\n            <td>{{data.totalBalance - data.totalRecieved}}</td>\\r\\n            <td class=\\\"bg-pink\\\">\\r\\n                <div *ngFor=\\\"let bill of data.bills\\\">\\r\\n                    {{bill.date | date: 'dd-MMM-yyyy'}} {{bill.ammount}}\\r\\n                </div>\\r\\n            </td>\\r\\n            <td class=\\\"bg-green\\\">\\r\\n                <div *ngFor=\\\"let pay of data.payments\\\"\\r\\n                    [ngClass]=\\\"{'highlight': pay.mode === 'cheque'}\\\" (click)=\\\"openPaymnetModal(pay)\\\">\\r\\n                    {{pay.date | date: 'dd-MMM-yyyy'}} {{pay.ammount}}\\r\\n                </div>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n</table>\"","export default \"<div >\\r\\n    <div class=\\\"flex\\\">\\r\\n        <label>Customer Name:</label>\\r\\n        <div>{{customer.name}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"flex\\\">\\r\\n        <label>Ammount:</label>\\r\\n        <div>{{data.pay.ammount}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"flex\\\">\\r\\n        <label>Mode:</label>\\r\\n        <div>{{data.pay.mode}}</div>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"updatePaymentStatus()\\\">Update cheque as cleared</button>\\r\\n</div>\"","export default \"<div class=\\\"card\\\">\\n    <mat-tab-group (selectedTabChange)=\\\"getAllPayments($event)\\\">\\n        <mat-tab label=\\\"Add Payment\\\">\\n            <div class=\\\"form\\\">\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputCustomerName\\\">Choose Customer</label>\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"payment.customerId\\\">\\n                        <option selected>Open this select menu</option>\\n                        <option *ngFor=\\\"let customer of customers\\\" [value]=\\\"customer._id\\\">\\n                            {{customer.name}}\\n                        </option>\\n                    </select>\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputAmmount\\\">Ammount</label>\\n                    <input type=\\\"number\\\" class=\\\"form-control\\\" id=\\\"inputAmmount\\\" placeholder=\\\"Enter Ammount\\\"\\n                        [(ngModel)]=\\\"payment.ammount\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputDate\\\">Date</label>\\n                    <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"inputDate\\\" placeholder=\\\"Enter Date\\\"\\n                        [(ngModel)]=\\\"payment.date\\\">\\n                </div>\\n                <div class=\\\"form-group col-sm-3\\\">\\n                    <label for=\\\"inputMode\\\">Mode</label>\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"payment.mode\\\">\\n                        <option selected>Open this select menu</option>\\n                        <option value=\\\"cheque\\\">\\n                            Cheque\\n                        </option>\\n                        <option value=\\\"neft\\\">\\n                            NEFT/RTGS\\n                        </option>\\n                        <option value=\\\"upi\\\">\\n                            UPI\\n                        </option>\\n                    </select>\\n                </div>\\n\\n                <div class=\\\"form-group col-sm-12\\\">\\n                    <button (click)=\\\"addPayment()\\\" class=\\\"btn btn-primary\\\"><i class=\\\"fa fa-plus-circle\\\"\\n                            aria-hidden=\\\"true\\\"></i>\\n                        Add Payment</button>\\n                </div>\\n            </div>\\n        </mat-tab>\\n        <mat-tab label=\\\"View Sales Report\\\">\\n            <div class=\\\"card-container w-150\\\">\\n                <button class=\\\"btn btn-primary export-btn\\\" (click)=\\\"exportToExcel()\\\">Export To Excel</button>\\n                <!-- <div class=\\\"form-group col-sm-2 filter\\\">\\n                    <select class=\\\"form-control\\\" [(ngModel)]=\\\"month\\\" (change)=\\\"filterTableData()\\\">\\n                        <option selected>Open this select menu</option>\\n                        <option *ngFor=\\\"let month of months\\\" [value]=\\\"month\\\">\\n                            {{month}}\\n                        </option>\\n                    </select>\\n                </div> -->\\n                <hr />\\n                <table class=\\\"table\\\" id=\\\"sales-table\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>Customer Name</th>\\n                            <th>Location</th>\\n                            <th>Total Due</th>\\n                            <th>Total Recieved</th>\\n                            <th>Balance</th>\\n                            <th>Sales</th>\\n                            <th>Payment</th>\\n                            <div class=\\\"head\\\" *ngFor=\\\"let rate of numbers\\\">\\n                                <th>1.0/8 | Rate</th>\\n                                <th>1.0/10 | Rate</th>\\n                                <th>1.0/15 | Rate</th>\\n                                <th>1.5/12 | Rate</th>\\n                                <th>2.0/12 | Rate</th>\\n                                <th>2.0/15 | Rate</th>\\n                                <th>2.0/18 | Rate</th>\\n                            </div>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let customer of customers\\\">\\n                            <td>{{customer.name}}</td>\\n                            <td>{{customer.state}}</td>\\n                            <td>{{customer.totalBalance}}</td>\\n                            <td>{{customer.totalRecieved}}</td>\\n                            <td>{{customer.totalBalance - customer.totalRecieved}}</td>\\n                            <td class=\\\"bg-pink\\\">\\n                                <div *ngFor=\\\"let bill of customer.bills\\\">\\n                                    {{bill.date | date: 'dd-MMM-yyyy'}} {{bill.ammount}}\\n                                </div>\\n                            </td>\\n                            <td class=\\\"bg-green\\\">\\n                                <div *ngFor=\\\"let pay of customer.payments\\\"\\n                                    [ngClass]=\\\"{'highlight': pay.mode === 'cheque'}\\\" (click)=\\\"openPaymnetModal(pay)\\\">\\n                                    {{pay.date | date: 'dd-MMM-yyyy'}} {{pay.ammount}}\\n                                </div>\\n                            </td>\\n\\n                            <div class=\\\"head\\\" *ngFor=\\\"let rate of numbers.slice().reverse()\\\">\\n                                <td *ngIf=\\\"customer.subRates[rate] && customer.subRates[rate].length > 0\\\">\\n                                    <b>{{customer.subRates[rate][0].items? customer.subRates[rate][0].items: 0}}</b>-\\n                                    {{customer.subRates[rate][0].rate}}\\n                                </td>\\n                                <td *ngIf=\\\"customer.subRates[rate] && customer.subRates[rate].length > 0\\\">\\n                                    <b>{{customer.subRates[rate][1].items? customer.subRates[rate][1].items: 0}}</b>-\\n                                    {{customer.subRates[rate][1].rate}}\\n                                </td>\\n    \\n                                <td *ngIf=\\\"customer.subRates[rate] && customer.subRates[rate].length > 0\\\">\\n                                    <b>{{customer.subRates[rate][2].items? customer.subRates[rate][2].items: 0}}</b>-\\n                                    {{customer.subRates[rate][2].rate}}\\n                                </td>\\n    \\n                                <td *ngIf=\\\"customer.subRates[rate] && customer.subRates[rate].length > 0\\\">\\n                                    <b>{{customer.subRates[rate][3].items? customer.subRates[rate][3].items: 0}}</b>-\\n                                    {{customer.subRates[rate][3].rate}}\\n                                </td>\\n    \\n                                <td *ngIf=\\\"customer.subRates[rate] && customer.subRates[rate].length > 0\\\">\\n                                    <b>{{customer.subRates[rate][4].items? customer.subRates[rate][4].items: 0}}</b>-\\n                                    {{customer.subRates[rate][4].rate}}\\n                                </td>\\n    \\n                                <td *ngIf=\\\"customer.subRates[rate] && customer.subRates[rate].length > 0\\\">\\n                                    <b>{{customer.subRates[rate][5].items? customer.subRates[rate][5].items: 0}}</b>-\\n                                    {{customer.subRates[rate][5].rate}}\\n                                </td>\\n    \\n                                <td *ngIf=\\\"customer.subRates[rate] && customer.subRates[rate].length > 0\\\">\\n                                    <b>{{customer.subRates[rate][6].items? customer.subRates[rate][6].items: 0}}</b>-\\n                                    {{customer.subRates[rate][6].rate}}\\n                                </td>\\n                            </div>\\n                            \\n\\n                        </tr>\\n                        <!-- <tr>\\n                            <td></td>\\n                            <td></td>\\n                            <td></td>\\n                            <td></td>\\n                            <td>Balance</td>\\n                            <td>Sales</td>\\n                            <td>Payment</td>\\n                            <td>1.0/8 | Rate</td>\\n                            <td>1.0/10 | Rate</td>\\n                            <td>1.0/15 | Rate</td>\\n                            <td>1.5/12 | Rate</td>\\n                            <td>2.0/12 | Rate</td>\\n                            <td>2.0/15 | Rate</td>\\n                            <td>2.0/18 | Rate</td>\\n                        </tr> -->\\n                    </tbody>\\n                </table>\\n            </div>\\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\\n\"","export default \"<div class=\\\"sidebar-wrapper\\\">\\n    <div class=\\\"item\\\">\\n        <a href=\\\"/invoices\\\">\\n            <i class=\\\"fa fa-dollar\\\" aria-hidden=\\\"true\\\"></i>\\n            <span>Invoices</span>\\n        </a>\\n    </div>\\n    <div class=\\\"item\\\">\\n        <a href=\\\"/customers\\\">\\n            <i class=\\\"fa fa-user\\\" aria-hidden=\\\"true\\\"></i>\\n            <span>Customer</span>\\n        </a>\\n    </div>\\n    <div class=\\\"item\\\">\\n        <a href=\\\"/inventory\\\">\\n            <i class=\\\"fa fa-shopping-cart\\\" aria-hidden=\\\"true\\\"></i>\\n            <span>Inventory</span>\\n        </a>\\n    </div>\\n    <div class=\\\"item\\\">\\n        <a href=\\\"/sales\\\">\\n            <i class=\\\"fa fa-bar-chart\\\" aria-hidden=\\\"true\\\"></i>\\n            <span>Sales</span>\\n        </a>\\n    </div>\\n</div>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CustomersComponent } from './customers/customers.component';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { InvoicesComponent } from './invoices/invoices.component';\nimport { SalesComponent } from './sales/sales.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'sales',\n    component: SalesComponent\n  },\n  {\n    path: 'invoices',\n    component: InvoicesComponent\n  },\n  {\n    path: 'customers',\n    component: CustomersComponent\n  },\n  {\n    path: 'inventory',\n    component: InventoryComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \".content-wrapper {\\n  margin-left: 100px;\\n  padding: 20px;\\n  margin-top: 70px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvQzovVXNlcnMvTGVub3ZvL0Rvd25sb2Fkcy9tdWR5bmV3LW1haW4vbXVkeS9zcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyIsInNyYy9hcHAvYXBwLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksa0JBQUE7RUFDQSxhQUFBO0VBQ0EsZ0JBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250ZW50LXdyYXBwZXIge1xuICAgIG1hcmdpbi1sZWZ0OiAxMDBweDtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIG1hcmdpbi10b3A6IDcwcHg7XG59IiwiLmNvbnRlbnQtd3JhcHBlciB7XG4gIG1hcmdpbi1sZWZ0OiAxMDBweDtcbiAgcGFkZGluZzogMjBweDtcbiAgbWFyZ2luLXRvcDogNzBweDtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.less']\n})\nexport class AppComponent {\n  title = 'mudy';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { PaymentModalComponent, SalesComponent } from './sales/sales.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule, MatSnackBar, MatSnackBarModule } from '@angular/material';\nimport { CustomerEditComponent, CustomersComponent } from './customers/customers.component';\nimport { CommonModule } from '@angular/common';\nimport { InventoryComponent } from './inventory/inventory.component';\nimport { InvoicesComponent, InvoiceViewComponent, PaymentReminderModalComponent } from './invoices/invoices.component';\nimport { NgxPrintModule } from 'ngx-print';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    SidebarComponent,\n    SalesComponent,\n    CustomersComponent,\n    InvoiceViewComponent,\n    InventoryComponent,\n    InvoicesComponent,\n    PaymentModalComponent,\n    PaymentReminderModalComponent,\n    CustomerEditComponent\n  ],\n  imports: [\n    MatSnackBarModule,\n    FormsModule,\n    HttpClientModule,\n    CommonModule,\n    ReactiveFormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    MatTabsModule,\n    BrowserAnimationsModule,\n    MatDialogModule,\n    NgxPrintModule\n  ],\n  entryComponents: [InvoiceViewComponent, PaymentModalComponent, PaymentReminderModalComponent, CustomerEditComponent ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerService {\n  public customer = {\n\n  };\n  constructor(private http: HttpClient) { }\n  getCustomers() {\n    return this.http.get<any>('http://localhost:3000/api/customers')\n      .map(res => res);\n  }\n  getAllStates() {\n    return this.http.get<any>('http://localhost:3000/api/states')\n      .map(res => res);\n  }\n  addCustomer(newCustomer) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    return this.http.post<any>('http://localhost:3000/api/customer', newCustomer, { headers: headers1 })\n      .map(res => res);\n  }\n  updateCustomer(id, sub) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    return this.http.put<any>('http://localhost:3000/api/updateCustomer/' + id, { subRates: sub }, { headers: headers1 })\n      .map(res => res);\n  }\n\n  updateMaxRateChanges(id, num) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    return this.http.put<any>('http://localhost:3000/api/updateMaxRateChanges/' + id, { number: num }, { headers: headers1 })\n      .map(res => res);\n  }\n  deleteCustomer(id) {\n    return this.http.delete<any>('http://localhost:3000/api/customer/' + id)\n      .map(res => res);\n  }\n  getCustomerById(id) {\n    return this.http.get<any>('http://localhost:3000/api/customer/' + id)\n      .map(res => res);\n  }\n  getInvoices() {\n    return this.http.get<any>('http://localhost:3000/api/invoices')\n      .map(res => res);\n  }\n  getInvoiceById(id) {\n    return this.http.get<any>('http://localhost:3000/api/invoice/' + id)\n      .map(res => res);\n  }\n  addInvoice(name, customerId, items, invoiceDate) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    const filename = name + '-' + invoiceDate;\n    return this.http.post<any>('http://localhost:3000/api/invoice',\n      { name: filename, id: customerId, goods: items, date: invoiceDate }, { headers: headers1 })\n      .map(res => res);\n  }\n\n  deleteInvoice(id) {\n    return this.http.delete<any>('http://localhost:3000/api/invoice/' + id)\n      .map(res => res);\n  }\n}\n","export default \".form {\\n  padding: 20px;\\n  display: inline-flex;\\n  flex-wrap: wrap;\\n}\\n.form table td {\\n  max-width: 20vw;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VzdG9tZXJzL0M6L1VzZXJzL0xlbm92by9Eb3dubG9hZHMvbXVkeW5ldy1tYWluL211ZHkvc3JjL2FwcC9jdXN0b21lcnMvY3VzdG9tZXJzLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9jdXN0b21lcnMvY3VzdG9tZXJzLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLG9CQUFBO0VBQ0EsZUFBQTtBQ0NKO0FESkE7RUFNUSxlQUFBO0FDQ1IiLCJmaWxlIjoic3JjL2FwcC9jdXN0b21lcnMvY3VzdG9tZXJzLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0ge1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIHRhYmxle1xuICAgICAgICB0ZCB7XG4gICAgICAgIG1heC13aWR0aDogMjB2dztcbiAgICAgICAgfVxuICAgIH1cbn0iLCIuZm9ybSB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG4uZm9ybSB0YWJsZSB0ZCB7XG4gIG1heC13aWR0aDogMjB2dztcbn1cbiJdfQ== */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatSnackBar, MAT_DIALOG_DATA } from '@angular/material';\nimport { CustomerService } from '../customer.service';\nimport { InventoryService } from '../inventory.service';\nimport { Customer, Submersibles } from '../models/customer';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.less']\n})\nexport class CustomersComponent implements OnInit {\n  public customer: Customer = {\n    name: '',\n    mobileNumber: '',\n    pan: '',\n    gst: '',\n    state: '',\n    stateCode: '',\n    address: '',\n    shippingAddress: '',\n    brand: '',\n    subRates: []\n  };\n  public states = [];\n  public customers: Customer[] = [];\n  public submersibles: Submersibles[] = [];\n  constructor(\n    private customerService: CustomerService,\n    private inventoryService: InventoryService,\n    private snackBar: MatSnackBar,\n    public dialog: MatDialog) { }\n\n  ngOnInit() {\n    this.getAllStates();\n    this.getAllSubmersibles();\n  }\n\n  getAllStates() {\n    this.customerService.getAllStates().subscribe(resp => {\n      this.states = resp;\n    }, err => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  setStateCode(val) {\n    this.states.forEach(element => {\n      if (element.state === val) {\n        this.customer.stateCode = element.stateCode;\n      }\n    });\n  }\n  getAllCustomers(tab) {\n    if (tab.index === 1) {\n      this.customerService.getCustomers().subscribe(resp => {\n        this.customers = resp;\n      }, (err) => {\n        this.snackBar.open(err, 'Error');\n      });\n    }\n  }\n  getAllSubmersibles() {\n    this.inventoryService.getAllSubmersibles().subscribe(resp => {\n      this.submersibles = resp;\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  addCustomer() {\n    const rates = [];\n    this.submersibles.forEach(element => {\n      rates.push({\n        name: element.name,\n        id: element._id,\n        rate: element.rate,\n        description: element.description\n      });\n    });\n    this.customer.subRates[0] = rates;\n    this.customerService.addCustomer(this.customer).subscribe(resp => {\n      this.customer = {\n        name: '',\n        mobileNumber: '',\n        pan: '',\n        gst: '',\n        state: '',\n        stateCode: '',\n        address: '',\n        shippingAddress: '',\n        brand: '',\n        subRates: []\n      };\n      this.snackBar.open('Customer Create', 'Success');\n    }, (error) => {\n      this.snackBar.open(error, 'Error');\n    });\n  }\n  editCustomer(val) {\n    const dialogRef = this.dialog.open(CustomerEditComponent, {\n      width: '50vw',\n      height: '70vh',\n      data: { customer: val }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n  deleteCustomer(id) {\n    this.customerService.deleteCustomer(id).subscribe(resp => {\n      this.snackBar.open('Customer Deleted', 'Success');\n      this.customerService.getCustomers().subscribe(res => {\n        this.customers = res;\n      }, (err) => {\n        this.snackBar.open(err, 'Error');\n      });\n    }, (error) => {\n      this.snackBar.open(error, 'Error');\n    });\n  }\n}\n\n\n\n@Component({\n  selector: 'app-customer-edit',\n  templateUrl: 'customer-edit.html',\n  styleUrls: ['./customers.component.less']\n})\nexport class CustomerEditComponent implements OnInit {\n  public submersibles: Submersibles[] = [];\n  public customer: Customer;\n  constructor(\n    public dialogRef: MatDialogRef<CustomerEditComponent>,\n    public customerService: CustomerService,\n    public inventoryService: InventoryService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.customer = this.data.customer;\n    this.getAllSubmersibles();\n  }\n  getAllSubmersibles() {\n    this.inventoryService.getAllSubmersibles().subscribe(resp => {\n      this.submersibles = resp;\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  updateCustomer() {\n    const rates = [];\n    this.submersibles.forEach(element => {\n      rates.push({\n        name: element.name,\n        id: element._id,\n        rate: element.rate,\n        description: element.description\n      });\n    });\n    this.customer.subRates.push(rates);\n    this.customerService.updateCustomer(this.customer._id, this.customer.subRates).subscribe(resp => {\n      this.inventoryService.getMaxRateChange().subscribe(res => {\n        const num = res[0].number + 1;\n        this.customerService.updateMaxRateChanges(res[0]._id, num).subscribe(response => {\n          this.snackBar.open('Updated Succesfully', 'Success');\n          this.dialogRef.close();\n        });\n      });\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n}\n","export default \"header {\\n  display: flex;\\n  justify-content: space-between;\\n  background-color: #fff;\\n  margin: 0;\\n  padding: 10px;\\n  align-items: center;\\n  height: 70px;\\n  position: fixed;\\n  top: 0;\\n  width: 100%;\\n  z-index: 999;\\n}\\nheader img {\\n  width: 15%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL0M6L1VzZXJzL0xlbm92by9Eb3dubG9hZHMvbXVkeW5ldy1tYWluL211ZHkvc3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLDhCQUFBO0VBQ0Esc0JBQUE7RUFDQSxTQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsWUFBQTtFQUNBLGVBQUE7RUFDQSxNQUFBO0VBQ0EsV0FBQTtFQUNBLFlBQUE7QUNDSjtBRFpBO0VBYVEsVUFBQTtBQ0VSIiwiZmlsZSI6InNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbImhlYWRlciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBtYXJnaW46IDA7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGhlaWdodDogNzBweDtcbiAgICBwb3NpdGlvbjogZml4ZWQ7XG4gICAgdG9wOiAwO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHotaW5kZXg6IDk5OTtcbiAgICBpbWcge1xuICAgICAgICB3aWR0aDogMTUlO1xuICAgIH1cbn0iLCJoZWFkZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMTBweDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgaGVpZ2h0OiA3MHB4O1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHRvcDogMDtcbiAgd2lkdGg6IDEwMCU7XG4gIHotaW5kZXg6IDk5OTtcbn1cbmhlYWRlciBpbWcge1xuICB3aWR0aDogMTUlO1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.less']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventoryService {\n\n  constructor(public http: HttpClient) { }\n\n  addPart(inventory) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    return this.http.post<any>('http://localhost:3000/api/part', inventory, { headers: headers1 })\n      .map(res => res);\n  }\n\n  getAllParts() {\n    return this.http.get<any>('http://localhost:3000/api/parts')\n      .map(res => res);\n  }\n\n  getAllSubmersibles() {\n    return this.http.get<any>('http://localhost:3000/api/submersibles')\n      .map(res => res);\n  }\n\n  getMaxRateChange() {\n    return this.http.get<any>('http://localhost:3000/api/maxRateChange')\n      .map(res => res);\n  }\n\n  getSubmersibleById(id) {\n    return this.http.get<any>('http://localhost:3000/api/submersible/' + id)\n      .map(res => res);\n  }\n\n  addSubmersibleQuantity(id, qty) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    return this.http.put<any>('http://localhost:3000/api/updateSubmersible/' + id, { quantity: qty }, { headers: headers1 })\n      .map(res => res);\n  }\n\n  getPartById(id) {\n    return this.http.get<any>('http://localhost:3000/api/stock/' + id)\n      .map(res => res);\n  }\n\n  updateStockQty(id, qty) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    return this.http.put<any>('http://localhost:3000/api/updateStock/' + id, { quantity: qty }, { headers: headers1 })\n      .map(res => res);\n  }\n\n  updateFinishGoods(id, qty) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    return this.http.put<any>('http://localhost:3000/api/updateFinishGoods/' + id, { quantity: qty }\n      , { headers: headers1 })\n      .map(res => res);\n  }\n\n  addPayment(payment) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    return this.http.post<any>('http://localhost:3000/api/payment/', payment, { headers: headers1 })\n      .map(res => res);\n  }\n\n  getAllPayments() {\n    return this.http.get<any>('http://localhost:3000/api/payments')\n      .map(res => res);\n  }\n\n  getPaymentsByCustomerId(customerId) {\n    return this.http.get<any>('http://localhost:3000/api/paymentByCustomer/' + customerId)\n      .map(res => res);\n  }\n\n  updatePayment(id) {\n    const headers1 = new HttpHeaders();\n    headers1.append('Content-Type', 'application/javascript');\n    headers1.append('Access-Control-Allow-Origin', '*');\n    return this.http.put<any>('http://localhost:3000/api/updatePayment/' + id, { headers: headers1 })\n      .map(res => res);\n  }\n\n  getInvoicesByCustomerId(customerId) {\n    return this.http.get<any>('http://localhost:3000/api/invoiceByCustomer/' + customerId)\n      .map(res => res);\n  }\n\n}\n","export default \".form {\\n  padding: 20px;\\n  display: inline-flex;\\n  flex-wrap: wrap;\\n}\\n.export-btn {\\n  float: right;\\n  margin: 10px;\\n  z-index: 999;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW52ZW50b3J5L0M6L1VzZXJzL0xlbm92by9Eb3dubG9hZHMvbXVkeW5ldy1tYWluL211ZHkvc3JjL2FwcC9pbnZlbnRvcnkvaW52ZW50b3J5LmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9pbnZlbnRvcnkvaW52ZW50b3J5LmNvbXBvbmVudC5sZXNzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLG9CQUFBO0VBQ0EsZUFBQTtBQ0NKO0FEQ0E7RUFDSSxZQUFBO0VBQ0EsWUFBQTtFQUNBLFlBQUE7QUNDSiIsImZpbGUiOiJzcmMvYXBwL2ludmVudG9yeS9pbnZlbnRvcnkuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybSB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG59XG4uZXhwb3J0LWJ0biB7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIG1hcmdpbjogMTBweDtcbiAgICB6LWluZGV4OiA5OTk7XG59IiwiLmZvcm0ge1xuICBwYWRkaW5nOiAyMHB4O1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xufVxuLmV4cG9ydC1idG4ge1xuICBmbG9hdDogcmlnaHQ7XG4gIG1hcmdpbjogMTBweDtcbiAgei1pbmRleDogOTk5O1xufVxuIl19 */\"","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\nimport { InventoryService } from '../inventory.service';\nimport { Part, Stock, Submersibles } from '../models/customer';\nimport * as XLSX from 'xlsx';\n@Component({\n  selector: 'app-inventory',\n  templateUrl: './inventory.component.html',\n  styleUrls: ['./inventory.component.less']\n})\nexport class InventoryComponent implements OnInit {\n  public part: Part = {\n    type: '',\n    name: '',\n    number: '',\n    material: '',\n    description: '',\n    moc: 0,\n    _id: '',\n    quantity: 0,\n    allowedSubType: ['1.0/8', '1.0/10', '1.5/12', '1.5/15', '2.0/12', '2.0/15', '2.0/18']\n  };\n  public stocks: Stock[] = [{\n    id: '',\n    moc: 0,\n    quantity: 0\n  }];\n  public items: Stock[] = [{\n    id: '',\n    moc: 0,\n    quantity: 0\n  }];\n  public inventories: Part[] = [];\n  public submersibles: Submersibles[] = [];\n  constructor(public inventoryService: InventoryService, public snackBar: MatSnackBar) { }\n\n  ngOnInit() {\n    this.getAllParts(0);\n    this.getAllSubmersibles();\n  }\n  getAllParts(tab) {\n    if (tab.index === 4) {\n      this.inventoryService.getAllSubmersibles().subscribe(res => {\n        this.submersibles = res;\n      }, err => {\n        this.snackBar.open(err, 'Error');\n      });\n    } else {\n      this.inventoryService.getAllParts().subscribe(resp => {\n        this.inventories = resp;\n      }, (err) => {\n        this.snackBar.open(err, 'Error');\n      });\n    }\n  }\n  getAllSubmersibles() {\n    this.inventoryService.getAllSubmersibles().subscribe(resp => {\n      this.submersibles = resp;\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  addStocks() {\n    this.stocks.push({\n      id: '',\n      moc: 0,\n      quantity: 0\n    });\n  }\n  removeStocks(index) {\n    this.stocks.splice(index, 1);\n  }\n  purchaseStocks() {\n    this.stocks.forEach(element => {\n      this.inventoryService.getPartById(element.id).subscribe(resp => {\n        let newQty;\n        if (resp[0].quantity > 0) {\n          console.log(typeof (resp[0].quantity), typeof (element.quantity), resp[0].quantity, element.quantity);\n          newQty = resp[0].quantity + element.quantity;\n          this.inventoryService.updateStockQty(element.id, newQty).subscribe(res => {\n            this.stocks = [{\n              id: '',\n              moc: 0,\n              quantity: 0\n            }];\n          }, (err) => {\n            this.snackBar.open(err, 'Error');\n          });\n        } else {\n          newQty = element.quantity;\n          this.inventoryService.updateStockQty(element.id, newQty).subscribe(res => {\n            this.stocks = [{\n              id: '',\n              moc: 0,\n              quantity: 0\n            }];\n          }, (err) => {\n            this.snackBar.open(err, 'Error');\n          });\n        }\n      }, (error) => {\n        this.snackBar.open(error, 'Error');\n      });\n    });\n  }\n  addItems() {\n    this.items.push({\n      id: '',\n      moc: 0,\n      quantity: 0\n    });\n  }\n  removeItems(index) {\n    this.items.splice(index, 1);\n  }\n\n  addFinishGoods() {\n    this.getAllParts(0);\n    this.items.forEach(element => {\n      this.inventories.forEach(part => {\n        if (part.allowedSubType.indexOf(element.id) !== -1) {\n          this.inventoryService.getPartById(part._id).subscribe(resp => {\n            const newQty = resp[0].quantity - (part.moc * element.quantity);\n            this.inventoryService.updateStockQty(part._id, newQty).subscribe(res => {\n              this.items = [{\n                id: '',\n                moc: 0,\n                quantity: 0\n              }];\n            }, (err) => {\n              this.snackBar.open(err, 'Error');\n            });\n          });\n        }\n      });\n      this.inventoryService.getSubmersibleById(element.id).subscribe(resp => {\n        let newQty;\n        if (resp[0].quantity > 0) {\n          console.log(typeof (resp[0].quantity), typeof (element.quantity), resp[0].quantity, element.quantity);\n          newQty = resp[0].quantity + element.quantity;\n          this.inventoryService.addSubmersibleQuantity(element.id, newQty).subscribe(res => {\n            this.items = [{\n              id: '',\n              moc: 0,\n              quantity: 0\n            }];\n          }, (err) => {\n            this.snackBar.open(err, 'Error');\n          });\n        } else {\n          newQty = element.quantity;\n          this.inventoryService.addSubmersibleQuantity(element.id, newQty).subscribe(res => {\n            this.items = [{\n              id: '',\n              moc: 0,\n              quantity: 0\n            }];\n          }, (err) => {\n            this.snackBar.open(err, 'Error');\n          });\n        }\n      }, (error) => {\n        this.snackBar.open(error, 'Error');\n      });\n    });\n  }\n\n  createPart() {\n    this.inventoryService.addPart(this.part).subscribe(resp => {\n      this.part = {\n        type: '',\n        name: '',\n        number: '',\n        material: '',\n        description: '',\n        moc: 0,\n        _id: '',\n        quantity: 0,\n        allowedSubType: ['1.0/8', '1.0/10', '1.5/12', '1.5/15', '2.0/12', '2.0/15', '2.0/18']\n      };\n      this.snackBar.open('Part Create', 'Success');\n    }, (error) => {\n      this.snackBar.open(error, 'Error');\n    });\n  }\n\n  exportToExcel() {\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(document.getElementById('inventory-table'));\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n    XLSX.writeFile(wb, 'inventory.xlsx');\n  }\n}\n","export default \".form {\\n  padding: 20px;\\n  display: inline-flex;\\n  flex-wrap: wrap;\\n}\\n.link {\\n  position: absolute;\\n  right: 30px;\\n  top: 10px;\\n  text-decoration: none;\\n}\\ntd button i {\\n  padding: 0 10px;\\n}\\n.invoice-wrapper {\\n  position: relative;\\n}\\n.invoice-wrapper .print-btn {\\n  position: absolute;\\n  right: 10px;\\n}\\n.fs-14 {\\n  font-size: 14px;\\n}\\n.flex-row {\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n}\\n.text-underline {\\n  text-decoration: underline;\\n}\\n.w-70 {\\n  width: 70%;\\n}\\n.h-8vh {\\n  height: 8vh;\\n}\\n.align-up {\\n  align-items: flex-start;\\n}\\n.text-right {\\n  width: 100%;\\n  text-align: right;\\n}\\n.space-between {\\n  justify-content: space-between;\\n  padding: 0 20px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaW52b2ljZXMvQzovVXNlcnMvTGVub3ZvL0Rvd25sb2Fkcy9tdWR5bmV3LW1haW4vbXVkeS9zcmMvYXBwL2ludm9pY2VzL2ludm9pY2VzLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9pbnZvaWNlcy9pbnZvaWNlcy5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxvQkFBQTtFQUNBLGVBQUE7QUNDSjtBRENBO0VBQ0ksa0JBQUE7RUFDQSxXQUFBO0VBQ0EsU0FBQTtFQUNBLHFCQUFBO0FDQ0o7QURDQTtFQUNJLGVBQUE7QUNDSjtBREVBO0VBQ0ksa0JBQUE7QUNBSjtBRERBO0VBR1Esa0JBQUE7RUFDQSxXQUFBO0FDQ1I7QURFQTtFQUNJLGVBQUE7QUNBSjtBREVBO0VBQ0ksYUFBQTtFQUNBLDhCQUFBO0VBQ0EsbUJBQUE7QUNBSjtBREVBO0VBQ0ksMEJBQUE7QUNBSjtBREVBO0VBQ0ksVUFBQTtBQ0FKO0FERUE7RUFDSSxXQUFBO0FDQUo7QURFQTtFQUNJLHVCQUFBO0FDQUo7QURFQTtFQUNJLFdBQUE7RUFDQSxpQkFBQTtBQ0FKO0FERUE7RUFDSSw4QkFBQTtFQUNBLGVBQUE7QUNBSiIsImZpbGUiOiJzcmMvYXBwL2ludm9pY2VzL2ludm9pY2VzLmNvbXBvbmVudC5sZXNzIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0ge1xuICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xufVxuLmxpbmsge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICByaWdodDogMzBweDtcbiAgICB0b3A6IDEwcHg7XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxudGQgYnV0dG9uIGkge1xuICAgIHBhZGRpbmc6IDAgMTBweDtcbn1cblxuLmludm9pY2Utd3JhcHBlciB7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIC5wcmludC1idG4ge1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHJpZ2h0OiAxMHB4O1xuICAgIH1cbn1cbi5mcy0xNCB7XG4gICAgZm9udC1zaXplOiAxNHB4O1xufVxuLmZsZXgtcm93IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuLnRleHQtdW5kZXJsaW5lIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbn1cbi53LTcwIHtcbiAgICB3aWR0aDogNzAlO1xufVxuLmgtOHZoIHtcbiAgICBoZWlnaHQ6IDh2aDtcbn1cbi5hbGlnbi11cCB7XG4gICAgYWxpZ24taXRlbXM6IGZsZXgtc3RhcnQ7XG59XG4udGV4dC1yaWdodCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdGV4dC1hbGlnbjogcmlnaHQ7XG59XG4uc3BhY2UtYmV0d2VlbiB7XG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICAgIHBhZGRpbmc6IDAgMjBweDtcbn0iLCIuZm9ybSB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG59XG4ubGluayB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgcmlnaHQ6IDMwcHg7XG4gIHRvcDogMTBweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxudGQgYnV0dG9uIGkge1xuICBwYWRkaW5nOiAwIDEwcHg7XG59XG4uaW52b2ljZS13cmFwcGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuLmludm9pY2Utd3JhcHBlciAucHJpbnQtYnRuIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICByaWdodDogMTBweDtcbn1cbi5mcy0xNCB7XG4gIGZvbnQtc2l6ZTogMTRweDtcbn1cbi5mbGV4LXJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbn1cbi50ZXh0LXVuZGVybGluZSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuLnctNzAge1xuICB3aWR0aDogNzAlO1xufVxuLmgtOHZoIHtcbiAgaGVpZ2h0OiA4dmg7XG59XG4uYWxpZ24tdXAge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cbi50ZXh0LXJpZ2h0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuLnNwYWNlLWJldHdlZW4ge1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmc6IDAgMjBweDtcbn1cbiJdfQ== */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CustomerService } from '../customer.service';\nimport { InventoryService } from '../inventory.service';\nimport { Customer, Good, Invoice, Submersibles } from '../models/customer';\n\n\n@Component({\n  selector: 'app-invoices',\n  templateUrl: './invoices.component.html',\n  styleUrls: ['./invoices.component.less']\n})\nexport class InvoicesComponent implements OnInit {\n\n  public goods: Good[] = [];\n  public customers: Customer[] = [];\n  public invoices: Invoice[] = [];\n  public customer: Customer = {\n    name: '',\n    _id: '',\n    mobileNumber: '',\n    stateCode: '',\n    pan: '',\n    gst: '',\n    state: '',\n    address: '',\n    shippingAddress: '',\n    brand: ''\n  };\n  date;\n  public submersibles: Submersibles[] = [];\n  constructor(\n    private customerService: CustomerService,\n    private snackBar: MatSnackBar,\n    private inventoryService: InventoryService,\n    public dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit() {\n    this.getAllCustomers();\n    this.getAllSubmersibles();\n  }\n  getAllSubmersibles() {\n    this.inventoryService.getAllSubmersibles().subscribe(resp => {\n      this.submersibles = resp;\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  addGoods() {\n    this.goods.push({\n      description: '',\n      price: 0,\n      qty: 0,\n      hsnSac: '',\n      serialNumber: '',\n      code: ''\n    });\n  }\n  removeGoods(index) {\n    this.goods.splice(index, 1);\n  }\n  getAllCustomers() {\n    this.customerService.getCustomers().subscribe(resp => {\n      this.customers = resp;\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n\n  fillDetails(id) {\n    this.customers.forEach(element => {\n      if (element._id === id) {\n        this.customer = element;\n      }\n    });\n  }\n\n  createInvoice() {\n    this.customerService.addInvoice(this.customer.name, this.customer._id, this.goods, this.date).subscribe(res => {\n      let totalAmt = 0;\n      res.goods.forEach(element => {\n        totalAmt = totalAmt + (element.price * element.qty);\n      });\n      this.getAllCustomers();\n      this.customer = {\n        name: '',\n        mobileNumber: '',\n        stateCode: '',\n        _id: '',\n        pan: '',\n        gst: '',\n        state: '',\n        address: '',\n        shippingAddress: '',\n        brand: ''\n      };\n      this.date = '';\n      this.snackBar.open('Invoice Create', 'Success');\n      this.goods.forEach(ele => {\n        this.submersibles.forEach(item => {\n          console.log(item.quantity, ele.qty, item._id, ele.description);\n          if (item._id === ele.description) {\n            ele.qty = item.quantity - ele.qty;\n          }\n          this.inventoryService.updateFinishGoods(ele.description, ele.qty).subscribe(resp => {\n            this.goods = [];\n          }, (error) => {\n            this.snackBar.open(error, 'Error');\n          });\n        });\n      });\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n\n  getAllInvoices(tab) {\n    if (tab.index === 1) {\n      this.customerService.getInvoices().subscribe(resp => {\n        this.invoices = resp;\n      }, (err) => {\n        this.snackBar.open(err, 'Error');\n      });\n    }\n  }\n\n  viewInvoice(id) {\n    const dialogRef = this.dialog.open(InvoiceViewComponent, {\n      width: '80vw',\n      height: '80vh',\n      data: { invoiceId: id }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n  deleteInvoice(id) {\n    this.customerService.deleteInvoice(id).subscribe(resp => {\n      this.snackBar.open('Invoice Deleted', 'Success');\n      this.customerService.getInvoices().subscribe(res => {\n        this.invoices = res;\n      }, (err) => {\n        this.snackBar.open(err, 'Error');\n      });\n    }, (error) => {\n      this.snackBar.open(error, 'Error');\n    });\n  }\n\n  fillGoodsDetails(subId, good) {\n    this.submersibles.forEach(ele => {\n      if (ele._id === subId) {\n        good.hsnSac = ele.hsnSac;\n      }\n      this.customer.subRates[this.customer.subRates.length - 1].forEach(element => {\n        console.log(element.id, subId);\n        if (element.id === subId) {\n          good.price = element.rate;\n        }\n      });\n    });\n  }\n\n}\n\n@Component({\n  selector: 'app-invoice-view',\n  templateUrl: 'invoice-view.html',\n  styleUrls: ['./invoices.component.less']\n})\nexport class InvoiceViewComponent implements OnInit {\n  public invoice: Invoice;\n  public customer: Customer;\n  public totalAmt = 0;\n  public submersibles: Submersibles[] = [];\n  constructor(\n    public dialogRef: MatDialogRef<InvoiceViewComponent>,\n    public customerService: CustomerService,\n    public inventoryService: InventoryService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.getAllSubmersibles();\n    this.customerService.getInvoiceById(this.data.invoiceId).subscribe(resp => {\n      this.invoice = resp[0];\n      this.invoice.goods.forEach(element => {\n        this.submersibles.forEach(sub => {\n          if (element.description === sub._id) {\n            element.description = sub.description;\n            element.code = sub.code;\n          }\n        });\n        this.totalAmt = this.totalAmt + (element.price * element.qty);\n      });\n      this.customerService.getCustomerById(this.invoice.customer).subscribe(res => {\n        this.customer = res[0];\n        console.log(this.customer);\n        const dialogRef = this.dialog.open(PaymentReminderModalComponent, {\n          width: '50vw',\n          height: '50vh',\n          data: { id: this.customer._id }\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          console.log('The dialog was closed');\n        });\n      });\n    }, error => {\n      this.snackBar.open(error, 'Error');\n    });\n  }\n  getAllSubmersibles() {\n    this.inventoryService.getAllSubmersibles().subscribe(resp => {\n      this.submersibles = resp;\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  printToPdf() {\n\n  }\n}\n\n@Component({\n  selector: 'app-payment-reminder-view',\n  templateUrl: 'payment-reminder-view.html',\n  styleUrls: ['./invoices.component.less']\n})\nexport class PaymentReminderModalComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<PaymentReminderModalComponent>,\n    public customerService: CustomerService,\n    public inventoryService: InventoryService,\n    public snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.data.totalBalance = 0;\n    this.data.totalRecieved = 0;\n    this.inventoryService.getPaymentsByCustomerId(this.data.id).subscribe(resp => {\n      this.data.payments = resp;\n      this.data.payments.forEach(element => {\n        this.data.totalRecieved = this.data.totalRecieved + element.ammount;\n      });\n    });\n    this.inventoryService.getInvoicesByCustomerId(this.data.id).subscribe((resp: any[]) => {\n      this.data.bills = resp;\n      this.data.subs = [];\n      this.data.bills.forEach(element => {\n        element.ammount = 0;\n        element.goods.forEach(item => {\n          this.data.subs.push(item);\n          element.ammount = element.ammount + (item.qty * item.price);\n          this.data.totalBalance = this.data.totalBalance + (item.qty * item.price);\n        });\n      });\n    });\n    console.log(this.data);\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","export default \".form {\\n  padding: 20px;\\n  display: inline-flex;\\n  flex-wrap: wrap;\\n}\\n.highlight {\\n  background-color: yellow;\\n}\\n.w-150 {\\n  width: 150vw;\\n}\\n.export-btn {\\n  margin: 10px;\\n  z-index: 999;\\n}\\n.flex {\\n  display: flex;\\n}\\n.flex label {\\n  margin-right: 10px;\\n}\\nthead .head,\\ntbody .head {\\n  display: table-cell;\\n  padding: 0.75rem;\\n  vertical-align: bottom;\\n  border-bottom: 2px solid #dee2e6;\\n}\\n.head th,\\n.head td {\\n  border: 0px;\\n  min-width: 120px;\\n}\\nth {\\n  border-top: 0px;\\n}\\n.filter {\\n  position: absolute;\\n  right: 0;\\n  top: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2FsZXMvQzovVXNlcnMvTGVub3ZvL0Rvd25sb2Fkcy9tdWR5bmV3LW1haW4vbXVkeS9zcmMvYXBwL3NhbGVzL3NhbGVzLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9zYWxlcy9zYWxlcy5jb21wb25lbnQubGVzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGFBQUE7RUFDQSxvQkFBQTtFQUNBLGVBQUE7QUNDSjtBRENBO0VBQ0ksd0JBQUE7QUNDSjtBRENBO0VBQ0ksWUFBQTtBQ0NKO0FEQ0E7RUFDSSxZQUFBO0VBQ0EsWUFBQTtBQ0NKO0FEQ0E7RUFDSSxhQUFBO0FDQ0o7QURGQTtFQUdRLGtCQUFBO0FDRVI7QURDQTs7RUFDSSxtQkFBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7RUFDQSxnQ0FBQTtBQ0VKO0FEQUE7O0VBQ0ksV0FBQTtFQUNBLGdCQUFBO0FDR0o7QUREQTtFQUNJLGVBQUE7QUNHSjtBRERBO0VBQ0ksa0JBQUE7RUFDQSxRQUFBO0VBQ0EsU0FBQTtBQ0dKIiwiZmlsZSI6InNyYy9hcHAvc2FsZXMvc2FsZXMuY29tcG9uZW50Lmxlc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZm9ybSB7XG4gICAgcGFkZGluZzogMjBweDtcbiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG59XG4uaGlnaGxpZ2h0IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XG59XG4udy0xNTAge1xuICAgIHdpZHRoOiAxNTB2dztcbn1cbi5leHBvcnQtYnRuIHtcbiAgICBtYXJnaW46IDEwcHg7XG4gICAgei1pbmRleDogOTk5O1xufVxuLmZsZXgge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgbGFiZWwge1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgfVxufVxudGhlYWQgLmhlYWQsIHRib2R5IC5oZWFkIHtcbiAgICBkaXNwbGF5OiB0YWJsZS1jZWxsO1xuICAgIHBhZGRpbmc6IDAuNzVyZW07XG4gICAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2RlZTJlNjtcbn1cbi5oZWFkIHRoLCAuaGVhZCB0ZCB7XG4gICAgYm9yZGVyOiAwcHg7XG4gICAgbWluLXdpZHRoOiAxMjBweDtcbn1cbnRoIHtcbiAgICBib3JkZXItdG9wOiAwcHg7XG59XG4uZmlsdGVyIHtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDA7XG4gICAgdG9wOiAxMHB4O1xufSIsIi5mb3JtIHtcbiAgcGFkZGluZzogMjBweDtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbn1cbi5oaWdobGlnaHQge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB5ZWxsb3c7XG59XG4udy0xNTAge1xuICB3aWR0aDogMTUwdnc7XG59XG4uZXhwb3J0LWJ0biB7XG4gIG1hcmdpbjogMTBweDtcbiAgei1pbmRleDogOTk5O1xufVxuLmZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xufVxuLmZsZXggbGFiZWwge1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG59XG50aGVhZCAuaGVhZCxcbnRib2R5IC5oZWFkIHtcbiAgZGlzcGxheTogdGFibGUtY2VsbDtcbiAgcGFkZGluZzogMC43NXJlbTtcbiAgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICNkZWUyZTY7XG59XG4uaGVhZCB0aCxcbi5oZWFkIHRkIHtcbiAgYm9yZGVyOiAwcHg7XG4gIG1pbi13aWR0aDogMTIwcHg7XG59XG50aCB7XG4gIGJvcmRlci10b3A6IDBweDtcbn1cbi5maWx0ZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHJpZ2h0OiAwO1xuICB0b3A6IDEwcHg7XG59XG4iXX0= */\"","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MatSnackBar, MAT_DIALOG_DATA } from '@angular/material';\nimport { CustomerService } from '../customer.service';\nimport { InventoryService } from '../inventory.service';\nimport { Customer, Good, Payment, Submersibles } from '../models/customer';\nimport * as XLSX from 'xlsx';\n@Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html',\n  styleUrls: ['./sales.component.less']\n})\nexport class SalesComponent implements OnInit {\n  public customers: Customer[] = [];\n  public payment: Payment = {\n    customerId: '',\n    date: new Date(),\n    ammount: 0,\n    mode: ''\n  };\n  public submersibles: Submersibles[] = [];\n  public goods: Good[] = [];\n  public customer: Customer;\n  public numberOfChange: number;\n  public numbers;\n  public month;\n  public months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n  constructor(\n    public customerService: CustomerService,\n    public inventoryService: InventoryService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog\n  ) {\n  }\n\n  ngOnInit() {\n    this.getAllCustomers();\n    this.getAllSubmersibles();\n    this.getMaxRateChanges();\n  }\n  fillDetails(id) {\n    this.customers.forEach(element => {\n      if (element._id === id) {\n        this.customer = element;\n      }\n    });\n  }\n  filterTableData() {\n    console.log(this.month);\n  }\n  getMaxRateChanges() {\n    this.inventoryService.getMaxRateChange().subscribe(resp => {\n      this.numberOfChange = resp[0].number;\n      this.numbers = Array(this.numberOfChange).fill(0).map((x, i) => i);\n      console.log(this.numbers, this.numberOfChange, 'num');\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  getAllSubmersibles() {\n    this.inventoryService.getAllSubmersibles().subscribe(resp => {\n      this.submersibles = resp;\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  addGoods() {\n    this.goods.push({\n      description: '',\n      price: 0,\n      qty: 0,\n      hsnSac: '',\n      serialNumber: '',\n      code: ''\n    });\n  }\n  removeGoods(index) {\n    this.goods.splice(index, 1);\n  }\n  getAllPayments(tab) {\n    if (tab.index === 1) {\n      this.customers.forEach(customer => {\n        customer.totalBalance = 0;\n        customer.totalRecieved = 0;\n        this.inventoryService.getInvoicesByCustomerId(customer._id).subscribe(resp => {\n          customer.bills = resp;\n          customer.subs = [];\n          customer.bills.forEach(element => {\n            element.ammount = 0;\n            element.goods.forEach(item => {\n              customer.subs.push(item);\n              element.ammount = element.ammount + (item.qty * item.price);\n              customer.totalBalance = customer.totalBalance + (item.qty * item.price);\n            });\n            console.log(customer);\n          });\n          customer.subs.forEach(it => {\n            customer.subRates[0].forEach(ele => {\n              if (ele.id === it.description) {\n                ele.items = ele.items ? (ele.items + it.qty) : it.qty;\n              }\n            });\n          });\n        }, (err) => {\n          this.snackBar.open(err, 'Error');\n        });\n        this.inventoryService.getPaymentsByCustomerId(customer._id).subscribe(resp => {\n          customer.payments = resp;\n          customer.payments.forEach(element => {\n            customer.totalRecieved = customer.totalRecieved + element.ammount;\n          });\n        }, (err) => {\n          this.snackBar.open(err, 'Error');\n        });\n      });\n    }\n  }\n  getAllCustomers() {\n    this.customerService.getCustomers().subscribe(resp => {\n      this.customers = resp;\n    }, (err) => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  addPayment() {\n    this.inventoryService.addPayment(this.payment).subscribe(resp => {\n      this.snackBar.open('Payment Added Success', 'Success');\n      this.payment = {\n        customerId: '',\n        date: new Date(),\n        ammount: 0,\n        mode: ''\n      };\n    }, err => {\n      this.snackBar.open(err, 'Error');\n    });\n  }\n  exportToExcel() {\n    const ws: XLSX.WorkSheet = XLSX.utils.table_to_sheet(document.getElementById('sales-table'));\n    const wb: XLSX.WorkBook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(wb, ws, 'Sheet1');\n    XLSX.writeFile(wb, 'sales.xlsx');\n  }\n\n  openPaymnetModal(data) {\n    if (data.mode === 'cheque') {\n      const dialogRef = this.dialog.open(PaymentModalComponent, {\n        width: '50vw',\n        data: { pay: data }\n      });\n\n      dialogRef.afterClosed().subscribe(result => {\n        console.log('The dialog was closed', result);\n        if (result === 'success') {\n          window.location.reload();\n        }\n      });\n    }\n  }\n}\n@Component({\n  selector: 'app-payment-modal',\n  templateUrl: 'payment-modal.html',\n  styleUrls: ['./sales.component.less']\n})\nexport class PaymentModalComponent implements OnInit {\n  public customer: Customer;\n  constructor(\n    public dialogRef: MatDialogRef<PaymentModalComponent>,\n    public customerService: CustomerService,\n    public inventoryService: InventoryService,\n    public snackBar: MatSnackBar,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    this.customerService.getCustomerById(this.data.pay.customerId).subscribe(res => {\n      this.customer = res[0];\n    });\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n  updatePaymentStatus() {\n    this.inventoryService.getPaymentsByCustomerId(this.data.pay.customerId).subscribe(res => {\n      console.log(res);\n      res.forEach(element => {\n        if (element._id === this.data.pay._id) {\n          this.inventoryService.updatePayment(element._id).subscribe(resp => {\n            this.snackBar.open(resp.msg, 'Success');\n            this.dialogRef.close('success');\n          }, err => {\n            this.snackBar.open(err, 'Error');\n          });\n        }\n      });\n    });\n  }\n}\n","export default \".sidebar-wrapper {\\n  width: 100px;\\n  height: calc(100vh - 70px);\\n  background-color: #fff;\\n  box-shadow: 0px 23px 21px 5px #aaa;\\n  position: fixed;\\n  top: 70px;\\n}\\n.sidebar-wrapper .item {\\n  padding: 20px;\\n  border-bottom: 1px solid #ddd;\\n}\\n.sidebar-wrapper .item a {\\n  color: #000;\\n  text-decoration: none;\\n  display: block;\\n  text-align: center;\\n}\\n.sidebar-wrapper .item a i {\\n  display: block;\\n  font-size: 27px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2lkZWJhci9DOi9Vc2Vycy9MZW5vdm8vRG93bmxvYWRzL211ZHluZXctbWFpbi9tdWR5L3NyYy9hcHAvc2lkZWJhci9zaWRlYmFyLmNvbXBvbmVudC5sZXNzIiwic3JjL2FwcC9zaWRlYmFyL3NpZGViYXIuY29tcG9uZW50Lmxlc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxZQUFBO0VBQ0EsMEJBQUE7RUFDQSxzQkFBQTtFQUNBLGtDQUFBO0VBQ0EsZUFBQTtFQUNBLFNBQUE7QUNDSjtBRFBBO0VBUVEsYUFBQTtFQUNBLDZCQUFBO0FDRVI7QURYQTtFQVdZLFdBQUE7RUFDQSxxQkFBQTtFQUNBLGNBQUE7RUFDQSxrQkFBQTtBQ0daO0FEakJBO0VBZ0JnQixjQUFBO0VBQ0EsZUFBQTtBQ0loQiIsImZpbGUiOiJzcmMvYXBwL3NpZGViYXIvc2lkZWJhci5jb21wb25lbnQubGVzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlYmFyLXdyYXBwZXIge1xuICAgIHdpZHRoOiAxMDBweDtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwdmggLSA3MHB4KTtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICAgIGJveC1zaGFkb3c6IDBweCAyM3B4IDIxcHggNXB4ICNhYWE7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIHRvcDogNzBweDtcbiAgICAuaXRlbSB7XG4gICAgICAgIHBhZGRpbmc6IDIwcHg7XG4gICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xuICAgICAgICBhIHtcbiAgICAgICAgICAgIGNvbG9yOiAjMDAwO1xuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgICAgICBpIHtcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDI3cHg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59IiwiLnNpZGViYXItd3JhcHBlciB7XG4gIHdpZHRoOiAxMDBweDtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNzBweCk7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIGJveC1zaGFkb3c6IDBweCAyM3B4IDIxcHggNXB4ICNhYWE7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiA3MHB4O1xufVxuLnNpZGViYXItd3JhcHBlciAuaXRlbSB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGRkO1xufVxuLnNpZGViYXItd3JhcHBlciAuaXRlbSBhIHtcbiAgY29sb3I6ICMwMDA7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbi5zaWRlYmFyLXdyYXBwZXIgLml0ZW0gYSBpIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGZvbnQtc2l6ZTogMjdweDtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.less']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environments';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":"webpack:///"}